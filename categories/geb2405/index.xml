<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GEB2405 on Gary&#39;s Tech Station</title>
    <link>https://chen-gary.github.io/categories/geb2405/</link>
    <description>Recent content in GEB2405 on Gary&#39;s Tech Station</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 02 Apr 2021 12:00:42 +0800</lastBuildDate><atom:link href="https://chen-gary.github.io/categories/geb2405/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GEB2405 Online Lecture 8 - Bivariate analysis - cross tabulation</title>
      <link>https://chen-gary.github.io/p/geb2405-online-lecture-8-bivariate-analysis-cross-tabulation/</link>
      <pubDate>Fri, 02 Apr 2021 12:00:42 +0800</pubDate>
      
      <guid>https://chen-gary.github.io/p/geb2405-online-lecture-8-bivariate-analysis-cross-tabulation/</guid>
      <description>Online Lecture 8 - Bivariate analysis - cross tabulation Packages used
library(gmodels) # for `CrossTable()` library(sjstats) # for cramer&amp;#39;V test - `crosstable_statistics()` library(sjPlot) # for `sjPlot::sjt.xtab()`  CrossTable(data$x, data$y) CrossTable(data$x, data$y, prop.t=FALSE, prop.chisq=FALSE) expected: If TRUE, chisq will be set to TRUE and expected cell counts from the chisq will be included (next lec)
prop.r: If TRUE, row proportions will be included
prop.c: If TRUE, column proportions will be included</description>
    </item>
    
    <item>
      <title>GEB2405 Online Lecture 7</title>
      <link>https://chen-gary.github.io/p/geb2405-online-lecture-7/</link>
      <pubDate>Tue, 30 Mar 2021 11:59:21 +0800</pubDate>
      
      <guid>https://chen-gary.github.io/p/geb2405-online-lecture-7/</guid>
      <description>Online Lecture 7   Pie chart
  Faceting (Multiple bars)
  # packages used library(ggplot2) library(gmodels) # for `CrossTable` Pie Chart Preparatory stage:
library(gmodels) #Make the CrossTable Crosstable(object,prop.t=TRUE) #Cross table to know the proportion CrossTable(smoking_and_drug_use_amongst_English_pupils$CgStat2,prop.t=TRUE) #create a small dataframe with the key value count.smokers&amp;lt;-data.frame(smoke=c(&amp;#34;NA&amp;#34;,&amp;#34;never smoked&amp;#34;,&amp;#34;smoked and then stopped&amp;#34;,&amp;#34;tried once&amp;#34;,&amp;#34;occasional smoker&amp;#34;,&amp;#34;light smoker&amp;#34;,&amp;#34;regular smoker&amp;#34;), n=c(51,5900,326,779,223,119,191), prop=c(0.007,0.777,0.043,0.103,0.029,0.016,0.025)) &amp;gt; count.smokers # a table will be printed out Visualization stage:
#create a pie char ggplot(&amp;lt;the_samall_dataframe&amp;gt;,aes(x=&amp;#34;&amp;#34;,y=?</description>
    </item>
    
    <item>
      <title>GEB2405 Online Lecture 6 - ggplot2 II (Two variables)</title>
      <link>https://chen-gary.github.io/p/geb2405-online-lecture-6-ggplot2-ii-two-variables/</link>
      <pubDate>Fri, 12 Mar 2021 12:13:44 +0800</pubDate>
      
      <guid>https://chen-gary.github.io/p/geb2405-online-lecture-6-ggplot2-ii-two-variables/</guid>
      <description>On-line Lecture 6 Import data from excel
library(&amp;#34;readxl&amp;#34;) # Specify sheet by its name my_data &amp;lt;- read_excel(&amp;#34;my_file.xlsx&amp;#34;, sheet = &amp;#34;data&amp;#34;) # Specify sheet by its index my_data &amp;lt;- read_excel(&amp;#34;my_file.xlsx&amp;#34;, sheet = 2) Lecture 6 (PPT) + theme(axis.text.x = element_text(angle = 45, size=10)) Axis tick and label can be removed using element_blank() or size=0
Legend can be removed using legend.position=&amp;quot;none&amp;quot;
# Add the headcount for each bar in a graph which indicate proportion ggplot(CUHKSZ_employment_survey_1,aes(fct_infreq(Occupation),y=(.</description>
    </item>
    
    <item>
      <title>GEB2405 Online Lecture 5 - ggplot2 I (One Variable)</title>
      <link>https://chen-gary.github.io/p/geb2405-online-lecture-5-ggplot2-i-one-variable/</link>
      <pubDate>Fri, 12 Mar 2021 12:13:27 +0800</pubDate>
      
      <guid>https://chen-gary.github.io/p/geb2405-online-lecture-5-ggplot2-i-one-variable/</guid>
      <description>On-line Lecture 5 - Data visualization - Graphing a continuous or discrete variable Package used
library(ggplot2) Table of contents:
(Graph for one variable)
 For continuous/numeric variables, creating, editing, coloring histogram For discrete/categorical/factor variables, creating, editing, coloring bar plot  Basic ggplot2 grammar 
ggplot(data, aes(x,y,options)) + geom_typegraph(option) # add labels ggplot(data, aes(x,y,options)) + geom_typegraph(option) + labs(x=..., y=..., title=...) # examples (very ugly) ggplot(mtcars,aes(x=mpg)) + geom_histogram() # mtcars$mpg ggplot(mtcars,aes(x=cyl)) + geom_histogram() # mtcars$cyl ggplot(mtcars,aes(x=mpg)) + geom_dotplot() Graphing ==an== unique continuous data (==histogram==)  binwidth=nbr: change the bar width fill=&amp;quot;name_of_color&amp;quot;: change the color with which the bar is filled colour=&amp;quot;name_of_color&amp;quot;: change the outline of the bar alpha=nbr: change the transparency of the color  ggplot(mtcars,aes(x=mpg))+geom_histogram(fill=&amp;#34;skyblue&amp;#34;, alpha=0.</description>
    </item>
    
    <item>
      <title>GEB2405 Online Lecture 4 - Merge data collected by different interviewers</title>
      <link>https://chen-gary.github.io/p/geb2405-online-lecture-4-merge-data-collected-by-different-interviewers/</link>
      <pubDate>Tue, 02 Mar 2021 14:11:04 +0800</pubDate>
      
      <guid>https://chen-gary.github.io/p/geb2405-online-lecture-4-merge-data-collected-by-different-interviewers/</guid>
      <description>On-line Lecture 4 - Merge data collected by different interviewers  how to merge answer collected by different coders (merge rows) how to add new variables in a dataset by matching the ID (add/merge columns) how to manually add observation (one single respondent) in an existing dataframe (add a row)  1. merge Before import the excel data files, make sure the name of the variables are exactly the same in all data files, e.</description>
    </item>
    
    <item>
      <title>GEB2405 Online Lecture 3 - Clean the data before analysis</title>
      <link>https://chen-gary.github.io/p/geb2405-online-lecture-3-clean-the-data-before-analysis/</link>
      <pubDate>Sat, 20 Feb 2021 12:09:09 +0800</pubDate>
      
      <guid>https://chen-gary.github.io/p/geb2405-online-lecture-3-clean-the-data-before-analysis/</guid>
      <description>Problems:
 var in wrong format, e.g. numeric, char, factor (transform data type) not properly coded NA, e.g. Non answer is coded as &amp;ldquo;-1&amp;rdquo; or &amp;ldquo;a.&amp;rdquo; instead of NA levels are not correctly ordered, e.g. income levels not organized in a progressive order some levels need to be merged. e.g. only 0.2% of respondents are in a given income category  The levels are not correctly ordered. e.g. income levels are not organized in a progressive order, we want</description>
    </item>
    
    <item>
      <title>GEB2405 Online Lecture 2</title>
      <link>https://chen-gary.github.io/p/geb2405-online-lecture-2/</link>
      <pubDate>Sat, 20 Feb 2021 12:08:00 +0800</pubDate>
      
      <guid>https://chen-gary.github.io/p/geb2405-online-lecture-2/</guid>
      <description>On-line Lecture 2 explore some data depositories
  UK Data Service https://www.ukdataservice.ac.uk/
 I have an account for it.
  GBCS (Great British Class Survey) CCSE (Cultural Capital and Social Exclusion)    CNSDA 中国国家调查数据库 ~~http://cnsda.edu.cn/index.php~~ / http://cnsda.ruc.edu.cn/
 I have an account for it.
  CGSS (China General Social Survey) 中国综合社会调查 CRS (The Chinese Religion Survey)    北京大学开放研究数据平台 https://opendata.pku.edu.cn/
   Tutorial 2 Some definitions:</description>
    </item>
    
    <item>
      <title>GEB2405 Online Lecture 1</title>
      <link>https://chen-gary.github.io/p/geb2405-online-lecture-1/</link>
      <pubDate>Tue, 09 Feb 2021 16:09:54 +0800</pubDate>
      
      <guid>https://chen-gary.github.io/p/geb2405-online-lecture-1/</guid>
      <description>On-line Lecture 1 data(&amp;#34;mtcars&amp;#34;)	# data(name of the dataset) head(mtcars) View(mtcars) # capital V Summarize
summary(data frame name$variable name) summary(mtcars$cyl) # summary of all the variable summary(data frame name) summary(mtcars) Standard Deviation
sd(object) sd(mtcars$cyl) Display all the information for a given object
&amp;gt; object &amp;gt; mtcars$cyl install.packages(&amp;#34;forcats&amp;#34;)	# install the package library(&amp;#34;forcats&amp;#34;)	# load the package installed Deal with NA (Non-answer)
mean(mtcars$cyl, na.rm=TRUE)	# remove NA when encountering it # mean for average value sd(gss_cat$tvhours, na.</description>
    </item>
    
  </channel>
</rss>
