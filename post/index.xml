<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Gary&#39;s Tech Station</title>
    <link>https://chen-gary.github.io/post/</link>
    <description>Recent content in Posts on Gary&#39;s Tech Station</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 30 May 2021 09:11:17 +0800</lastBuildDate><atom:link href="https://chen-gary.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Git Basic Skills</title>
      <link>https://chen-gary.github.io/p/git-basic-skills/</link>
      <pubDate>Sun, 30 May 2021 09:11:17 +0800</pubDate>
      
      <guid>https://chen-gary.github.io/p/git-basic-skills/</guid>
      <description>配置 Configuration git config --global user.name &amp;#34;Your Name&amp;#34; git config --global user.email &amp;#34;email@example.com&amp;#34; git config --list 创建版本库 git init ls -ah 基础命令 git add &amp;lt;file&amp;gt; git commit -m &amp;lt;message&amp;gt; git status 版本回退 git log git log --pretty=oneline  HEAD 当前版本 HEAD^ 上一个版本 HEAD^^ 上上一个版本 HEAD~100  git reset --hard HEAD^ git log 回到未来的某个版本 git reset --hard &amp;lt;commit_id&amp;gt; git reset --hard 1094a git reflog # find commit id 撤销修改 注意：以下命令似乎是旧版git命令，虽然不影响使用，但建议参考git status的提示，使用新版命令。</description>
    </item>
    
    <item>
      <title>Blender Tutorial Notes</title>
      <link>https://chen-gary.github.io/p/blender-tutorial-notes/</link>
      <pubDate>Wed, 03 Mar 2021 16:48:34 +0800</pubDate>
      
      <guid>https://chen-gary.github.io/p/blender-tutorial-notes/</guid>
      <description>View: Numpad 1 / 3 / 7, or ctrl + Numpad 1 / 3 / 7
E to extrude
 alt + E  face normal
 I to insert
 double lick I
B while doing insert (if B does not work, press I again to disable individual faces) (e.g. car window)
 G
S
R
O proportional editing (when modeling the tree)
ctrl + B Bevel
alt + S shrink / flatten</description>
    </item>
    
    <item>
      <title>Compile Using CMake</title>
      <link>https://chen-gary.github.io/p/compile-using-cmake/</link>
      <pubDate>Wed, 03 Mar 2021 15:54:26 +0800</pubDate>
      
      <guid>https://chen-gary.github.io/p/compile-using-cmake/</guid>
      <description>在使用CLion编写C++项目后，IDE会自动生成CMakeLists.txt文件。那么如何手动编译我们写的代码呢？
步骤如下
  将项目中的所有源文件 + 自动生成的CMakeLists.txt 传入Linux虚拟机（的同一目录下）
  mkdir build cd build cmake ..	# 用cmake命令将CMakeLists.txt文件转化为make所需要的makefile文件 make	# 用make命令编译源码生成可执行程序   运行
./name_of_executable   (ref: https://www.cnblogs.com/cv-pr/p/6206921.html)</description>
    </item>
    
    <item>
      <title>CSC3050 Tips</title>
      <link>https://chen-gary.github.io/p/csc3050-tips/</link>
      <pubDate>Sat, 20 Feb 2021 22:59:49 +0800</pubDate>
      
      <guid>https://chen-gary.github.io/p/csc3050-tips/</guid>
      <description>1_Virtual Machine Setup.pdf http://127.0.0.1:3050/login
password: csc3050
You will see a vscode running in your browser
 openssh server
open terminal
ssh -p5678 csc3050@127.0.0.1 password: csc3050
Then you will login the machine
 Transfer files to VM Simply drag files in the vscode&amp;hellip;
(Use Git or SCP. See the pdf file.)</description>
    </item>
    
    <item>
      <title>Blender: Import Material and Setup Material Library</title>
      <link>https://chen-gary.github.io/p/blender-import-material-and-setup-material-library/</link>
      <pubDate>Thu, 18 Feb 2021 20:57:29 +0800</pubDate>
      
      <guid>https://chen-gary.github.io/p/blender-import-material-and-setup-material-library/</guid>
      <description>使用material library的原因 多人合作时，方便颜色统一（尤其针对统一玻璃之类的复杂材质）
如何导入material  打开想要导入material的 blender file 导航栏选择 File &amp;gt; Append 找到material_template_lib.blend，并双击进入 进入Material文件夹，并双击选择想导入的material  pic
这样在Material selector中应该就能找到刚刚导入的material
（注意重命名导入的material）
（ref https://blender.stackexchange.com/questions/63018/how-to-import-downloaded-materials-files/63055）
*合作方式 比如我负责选定玻璃的材质，那么我就
 下载最新的material_template_lib.blend 新建一个cube，后新建并附上调好的玻璃材质 commit回GitHub，更新material_template_lib.blend  </description>
    </item>
    
    <item>
      <title>Blender: UV Coloring Method</title>
      <link>https://chen-gary.github.io/p/blender-uv-coloring-method/</link>
      <pubDate>Thu, 18 Feb 2021 20:28:18 +0800</pubDate>
      
      <guid>https://chen-gary.github.io/p/blender-uv-coloring-method/</guid>
      <description>The palette style UV coloring method 是一个使用调色板图片(palette) 对模型涂色的方法
 优点：涂色非常简单快速，可以边建模边涂色（辅助建模） 缺点：有的时候不好找想要的颜色；多人合作时不方便后期统一颜色；导入unity时需要更改几个默认设置  为解决这些问题，我找到了一个快速对 UV coloring 的模型用标准 material 重新上色的方法。总的效率可能比建完整个模型再上色更高。
The palette style UV coloring method 这个方法来自于一名油管大佬 https://www.youtube.com/watch?v=1jHUY3qoBu8
他在这个视频的 02:12 - 4:42 介绍了这个涂色方法
这个视频的简介里，他给了两个 palette 的图片：
  图一
  图二
  以及一个我觉得蛮不错的blender setting视频（这个很短的视频里也介绍了 The palette style UV coloring method 的方法）：
https://www.youtube.com/watch?v=BlxiCd0Upg4
用标准 material 重新上色 假设在建模的时候，我把墙面涂成了诡异的蓝色，而右边material栏中的 Material_final 是最终统一的墙面颜色。
pic1
  tab 进入编辑模式
  鼠标放在中间的编辑窗口，按 A 全选</description>
    </item>
    
  </channel>
</rss>
